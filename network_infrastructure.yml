Description: > 
  Mohammed Salah / Deploy a high avaliblity web app (portofilo) using aws cloudformation

Parameters: 
  EnvironmentName:
    Description: An environment name that will prefixed to resource names
    Type: String
  
  VpcCIDR:
      Description: IP range for this VPC
      Type: String
      Default: 10.0.0.0/16

  PublicSubnet1CIDR:
      Description: IP range (CIDR notation) for Public subnet in the 1st AZ
      Type: String
      Default: 10.0.0.0/24

  PublicSubnet2CIDR:
      Description: IP range (CIDR notation) for Public subnet in the 2nd AZ
      Type: String
      Default: 10.0.1.0/24
 
  PrivateSubnet1CIDR:
      Description: IP range (CIDR notation) for Private subnet in the 1st AZ
      Type: String
      Default: 10.0.2.0/24
 
  PrivateSubnet2CIDR:
      Description: IP range (CIDR notation) for Private subnet in the 2nd AZ
      Type: String
      Default: 10.0.3.0/24


Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName


  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select  [ 0, !GetAZs  '' ]
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select  [ 0, !GetAZs  '' ]
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select  [ 0, !GetAZs  '' ]
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select  [ 0, !GetAZs  '' ]
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  NatGatway1EIP:
    DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc

  NatGatway2EIP:
    DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  
    
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
          Fn::GetAtt:
          - NatGatway1EIP
          - AllocationId
        SubnetId:
          Ref: PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
          Fn::GetAtt:
          - NatGatway2EIP
          - AllocationId
        SubnetId:
          Ref: PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
       RouteTableId:
         Ref: PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: InternetGateway   

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} private Routes AZ 1

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
       RouteTableId:
         Ref: PrivateRouteTable1
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: NatGateway1   

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName} private Routes AZ 2

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
       RouteTableId:
         Ref: PrivateRouteTable2
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: NatGateway2   

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable2

Outputs:
  
  VPC: 

      Description: A reference to the main VPC
      Value: !Ref VPC
      Export:
        Name: !Sub  ${EnvironmentName}-VPCID

  PublicSubnets:
      Description: A list of the public subnets
      Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PUB-NETS

  PrivateSubnets:
      Description: A list of the private subnets
      Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PRIV-NETS

